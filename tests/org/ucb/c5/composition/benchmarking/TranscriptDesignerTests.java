package org.ucb.c5.composition.benchmarking;

import org.junit.jupiter.api.Test;
import static com.google.common.truth.Truth.assertThat;
import org.ucb.c5.composition.TranscriptDesigner2;
import org.ucb.c5.composition.model.Transcript;

import java.util.HashSet;

/**
 * Just some basic tests I wrote for Transcript Designer when building out my code.
 *
 * @author Aditya Vunnum
 */
public class TranscriptDesignerTests {

    @Test
    public void testProteins() throws Exception {
        TranscriptDesigner2 designer = new TranscriptDesigner2();
        designer.initiate();

        //String peptide = "MPKPVANQEDEDPTPYLFVSLEQRRIDQSKPYDSKKSCWIPDEKEGYLLGEIKATKGDIVSVGLQGGEVRDIKSEKVEKVNPPKFEKIEDMADMTVLNTPCVLHNLRQRYYAKLIYTYSGLFCVAINPYKRYPVYTNRCAKMYRGKRRNEVPPHIFAISDGAYVDMLTNHVNQSMLITGESGAGKTENTKKVIAYFATVGASKKTDEAAKSKGSLEDQVVQTNPVLEAFGNAKTVRNDNSSRFGKFIRIHFGPTGKLAGADIETYLLEKARVISQQSLERSYHIFYQIMSGSVPGVKEMVFLGQHIGDYPGICQGKTRIPGVNDGEEFELTDQAFDILGFTKQEKEDVYRITAAVMHMGGMKFKQRGREEQAEQDGEEEGGRVSKLFGCDTAELYKNLLKPRIKVGNEFVTQGRNVQQVTNSIGALCKGVFDRLFKWLVKKCNETLDTQQKRQHFIGVLDIAGFEIFEYNGFEQLCINFTNEKLQQFFNHHMFVLEQEEYKREGIDWAFIDFGMDLLACIDLIEKPMGILSILEEESMFPKATDQTFSEKLTNTHLGKSAPFQKPKPPKPGQQAAHFAIAHYAGCVSYNITGWLEKNKDPLNDTVVDQFKKSQNKLLIEIFADHAGQSGGGEQAKGGRGKKGGGFATVSSAYKEQLNSLMTTLRSTQPHFVRCIIPNEMKQPGVVDAHLVMHQLTCNGVLEGIRICRKGFPNRMMYPDFKMRYKIMCPKLLQGVEKDKKATEIIIKFIDLPEDQYRLGNTKVFFRAGVLGQMEEFRDERLGKIMSWMQAWARGYLSRKGFKKLQEQRVALKVVQRNLRKYLQLRTWPWYKLWQKVKPLLNVSRIEDEIARLEEKAKKAEELHAAEVKVRKELEALNAKLLAEKTALLDSLSGEKGALQDYQERNAKLTAQKNDLENQLRDIQERLTQEEDARNQLFQQKKKADQEISGLKKDIEDLELNVQKAEQDKATKDHQIRNLNDEIAHQDELINKLNKEKKMQGETNQKTGEELQAAEDKINHLNKVKAKLEQTLDELEDSLEREKKVRGDVEKSKRKVEGDLKLTQEAVADLERNKKELEQTIQRKDKELSSITAKLEDEQVVVLKHQRQIKELQARIEELEEEVEAERQARAKAEKQRADLARELEELGERLEEAGGATSAQIELNKKREAELSKLRRDLEEANIQHESTLANLRKKHNDAVAEMAEQVDQLNKLKAKAEHDRQTCHNELNQTRTACDQLGRDKAAQEKIAKQLQHTLNEVQSKLDETNRTLNDFDASKKKLSIENSDLLRQLEEAESQVSQLSKIKISLTTQLEDTKRLADEESRERATLLGKFRNLEHDLDNLREQVEEEAEGKADLQRQLSKANAEAQVWRSKYESDGVARSEELEEAKRKLQARLAEAEETIESLNQKCIGLEKTKQRLSTEVEDLQLEVDRANAIANAAEKKQKAFDKIIGEWKLKVDDLAAELDASQKECRNYSTELFRLKGAYEEGQEQLEAVRRENKNLADEVKDLLDQIGEGGRNIHEIEKARKRLEAEKDELQAALEEAEAALEQEENKVLRAQLELSQVRQEIDRRIQEKEEEFENTRKNHQRALDSMQASLEAEAKGKAEALRMKKKLEADINELEIALDHANKANAEAQKNIKRYQQQLKDIQTALEEEQRARDDAREQLGISERRANALQNELEESRTLLEQADRGRRQAEQELADAHEQLNEVSAQNASISAAKRKLESELQTLHSDLDELLNEAKNSEEKAKKAMVDAARLADELRAEQDHAQTQEKLRKALEQQIKELQVRLDEAEANALKGGKKAIQKLEQRVRELENELDGEQRRHADAQKNLRKSERRVKELSFQSEEDRKNHERMQDLVDKLQQKIKTYKRQIEEAEEIAALNLAKFRKAQQELEEAEERADLAEQAISKFRAKGRAGSVGRGASPAPRATSVRPQFDGLAFPPRFDLAPENEF";

        //Transcript myosin_Result = designer.run(peptide, new HashSet<>());
        //System.out.println(myosin_Result.getCodons().length);
        //assertThat(myosin_Result.getCodons().length).isEqualTo(peptide.length());

        String peptide2 = "MSKEHTTEHLRAELKSLSDTLEEVLSSSGEKSKEELSKIRSKAEQALKQSRYRLGETGDAIAKQTRVAAARADEYVRENPWTGVGIGAAIGVVLGVLLSRR";

        Transcript peptide2_result = designer.run(peptide2, new HashSet<>());
        assertThat(peptide2_result.getCodons().length).isEqualTo(peptide2.length());
    }


    public static void main(String[] args) throws Exception {
        TranscriptDesigner2 designer = new TranscriptDesigner2();
        designer.initiate();
        System.out.println(designer.codon_usage.get("I"));
        System.out.println(designer.codon_usage.get("I").size());

        System.out.println(designer.codon_usage.get("R"));
        System.out.println(designer.codon_usage.get("R").size());
    }
}
